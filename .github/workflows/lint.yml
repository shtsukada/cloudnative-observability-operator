---
name: lint (operator)

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install yamllint & jq
        run: |
          python3 -m pip install --upgrade pip
          pip3 install yamllint
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Run yamllint
        run: yamllint .
      - name: Run markdownlint
        run: npx --yes markdownlint-cli2 **/*.md
      - name: Validate JSON
        run: |
          set -e
          find . -type f -name "*.json" -print0 | xargs -0 -I{} sh -c 'jq . "{}" >/dev/null' || true

      - name: Detect Go files
        id: gofiles
        shell: bash
        run: |
          has_mod=""
          if [ -f go.mod ]; then has_mod="yes"; fi
          count=$(git ls-files '*.go' | wc -l | tr -d ' ')
          echo "has_mod=$has_mod"        >> "$GITHUB_OUTPUT"
          echo "count=$count"            >> "$GITHUB_OUTPUT"
          echo "go.mod: $has_mod, .go files: $count"

      - name: Setup Go
        if: steps.gofiles.outputs.has_mod == 'yes'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: golangci-lint
        if: steps.gofiles.outputs.has_mod == 'yes' && steps.gofiles.outputs.count != '0'
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61
          args: --timeout 5m

      - name: go test
        if: steps.gofiles.outputs.has_mod == 'yes' && steps.gofiles.outputs.count != '0'
        run: go test ./... -count=1
